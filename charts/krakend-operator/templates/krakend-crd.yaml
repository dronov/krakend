apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: krakends.krakend.nais.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
  {{- include "krakend-operator.labels" . | nindent 4 }}
spec:
  group: krakend.nais.io
  names:
    kind: Krakend
    listKind: KrakendList
    plural: krakends
    singular: krakend
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Krakend is the Schema for the krakends API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KrakendSpec defines the desired state of Krakend
            properties:
              authProviders:
                items:
                  properties:
                    alg:
                      type: string
                    issuer:
                      type: string
                    jwkUrl:
                      type: string
                    name:
                      type: string
                  required:
                  - alg
                  - issuer
                  - jwkUrl
                  - name
                  type: object
                type: array
              deployment:
                properties:
                  deploymentType:
                    type: string
                  image:
                    properties:
                      pullPolicy:
                        type: string
                      registry:
                        type: string
                      repository:
                        type: string
                      tag:
                        type: string
                    type: object
                  replicaCount:
                    type: integer
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined in
                          spec.resourceClaims, that are used by this container. \n This
                          is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be set
                          for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              ingress:
                description: Ingress lets you configure the ingress class, annotations
                  and hosts or tls for an ingress
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  className:
                    type: string
                  enabled:
                    type: boolean
                  hosts:
                    items:
                      properties:
                        host:
                          type: string
                        paths:
                          items:
                            properties:
                              path:
                                type: string
                              pathType:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              ingressHost:
                description: IngressHost is a shortcut for creating a single host ingress
                  with sane defaults, if Ingress is specified this is ignored
                type: string
              name:
                type: string
            required:
            - name
            type: object
          status:
            description: KrakendStatus defines the observed state of Krakend
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []